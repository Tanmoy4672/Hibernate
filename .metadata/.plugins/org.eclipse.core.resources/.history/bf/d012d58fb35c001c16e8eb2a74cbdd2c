package com.map;

import java.util.ArrayList;
import java.util.List;

import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;
import org.hibernate.cfg.Configuration;

public class OneToManyMappingEager {

	public static void main(String[] args) {

		Configuration cfg = new Configuration();
		cfg.configure("hibernate.cfg.xml");
		SessionFactory factory = cfg.buildSessionFactory();
//
//		// uni directional OneToOne
		QuestionTableForEager ques1 = new QuestionTableForEager();
		ques1.setQuestionId(1212);
		ques1.setQues("What is Java ?");
//
//		
//		//creating answer Object
		AnswerTable ans1 = new AnswerTable();
		ans1.setAnswerId(343);
		ans1.setAnswer("Java is a programmming language");
		ans1.setQuestion(ques1);
	//	ans1.setQuestion(ques1);
//
		AnswerTable ans2 = new AnswerTable();
		ans2.setAnswerId(344);
		ans2.setAnswer("With the help of java we can create Softwares.");
		ans2.setQuestion(ques1);

		AnswerTable ans3 = new AnswerTable();
		ans3.setAnswerId(345);
		ans3.setAnswer("Java has different type of frameworks.");
		ans3.setQuestion(ques1);
//		
//creating list for adding all answer
		List<AnswerTable> list = new ArrayList<AnswerTable>();
		list.add(ans1);
		list.add(ans2);
		list.add(ans3);
		
//		
//		ques1.setAnswers(list);

		Session session = factory.openSession();
		Transaction tx = session.beginTransaction();

		// Save Answer
		session.save(ques1);
		session.save(ans1);
		session.save(ans2);
		session.save(ans3);


		tx.commit();
		
		
		//data fetching by lazy loading
		QuestionTableForEager newQ = (QuestionTableForEager)session.get(QuestionTableForEager.class, 1212);
		System.out.println(newQ.getQuestionId());
		System.out.println(newQ.getAnswers().size());
		
//		for(AnswerTable a : newQ.getAnswers()) {
//			System.out.println(a.getAnswer());
//		}
////		
//		
		session.close();
		factory.close();
		System.out.println("Done");
	}
}
